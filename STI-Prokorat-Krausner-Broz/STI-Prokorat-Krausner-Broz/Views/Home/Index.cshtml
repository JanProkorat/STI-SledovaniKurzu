@model STIProkoratKrausnerBroz.Models.ToolsClass
@using System.Data
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Kraušner, Prokorát, Brož";
}
@Html.Raw(TempData["msg"]);
<div class="currencyContainer" id="audDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="aud-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="aud-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="dkkDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="dkk-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="dkk-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="eurDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="eur-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="eur-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="hrkDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="hrk-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="hrk-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="cadDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="cad-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="cad-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="hufDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="huf-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="huf-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="nokDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="nok-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="nok-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="plnDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="pln-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="pln-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="ronDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="ron-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="ron-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="rubDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="rub-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="rub-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="sekDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="sek-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="sek-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="chfDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="chf-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="chf-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="jpyDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="jpy-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="jpy-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="usdDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="usd-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="usd-sale-canvas"></canvas>
    </div>
</div>
<div class="currencyContainer" id="gbpDiv">
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="gbp-purchase-canvas"></canvas>
    </div>
    <div class="graphCanvasDiv">
        <canvas class="graphCanvas" id="gbp-sale-canvas"></canvas>
    </div>
</div>
<script type="text/javascript">
    let bankNames = [];
    let dates = [];
    let currencyNames = [];
    @{

        foreach (var d in Model.Currencies[0].Dates)
        {
            @:dates.push("@d.date.ToString()");
        }
        foreach(var curr in Model.Currencies){
            @:var currenciesSales = [];
            @:var currenciesPurchases = [];
            @:var indexes = [0, 0, 0, 0, 0];
            @:for(var i = 0; i < 5; i++){
                @:currenciesSales.push([]);
                @:currenciesPurchases.push([]);
            @:}
            foreach(var date in curr.Dates){
                foreach(var bank in date.Banks){
                    @:if(bankNames.length < 5){
                        @:bankNames.push("@bank.name");
                    @:}
                    if(bank.name == "kb"){
                        @:currenciesSales[0][indexes[0]] = parseFloat("@bank.saleVal.ToString().Replace(",", ".")");
                        @:currenciesPurchases[0][indexes[0]] = parseFloat("@bank.purchaseVal.ToString().Replace(",", ".")");
                        @:indexes[0]++;
                    }
                    if(bank.name == "rb"){
                        @:currenciesSales[1][indexes[1]] = parseFloat("@bank.saleVal.ToString().Replace(",", ".")");
                        @:currenciesPurchases[1][indexes[1]] = parseFloat("@bank.purchaseVal.ToString().Replace(",", ".")");
                        @:indexes[1]++;
                    }
                    if(bank.name == "cs"){
                        @:currenciesSales[2][indexes[2]] = parseFloat("@bank.saleVal.ToString().Replace(",", ".")");
                        @:currenciesPurchases[2][indexes[2]] = parseFloat("@bank.purchaseVal.ToString().Replace(",", ".")");
                        @:indexes[2]++;
                    }
                    if(bank.name == "cnb"){
                        @:currenciesSales[3][indexes[3]] = parseFloat("@bank.saleVal.ToString().Replace(",", ".")");
                        @:currenciesPurchases[3][indexes[3]] = parseFloat("@bank.purchaseVal.ToString().Replace(",", ".")");
                        @:indexes[3]++;
                    }
                    if(bank.name == "csob"){
                        @:currenciesSales[4][indexes[4]] = parseFloat("@bank.saleVal.ToString().Replace(",", ".")");
                        @:currenciesPurchases[4][indexes[4]] = parseFloat("@bank.purchaseVal.ToString().Replace(",", ".")");
                        @:indexes[4]++;
                    }

                }

            }
            @:createCurrencySaleGraph("@curr.name.ToLower()"+"-sale-canvas", "@curr.name", bankNames, dates, currenciesSales);
            @:createCurrencyPurchaseGraph("@curr.name.ToLower()"+"-purchase-canvas", "@curr.name", bankNames, dates, currenciesPurchases);
        }
     }
</script>



