#pragma checksum "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9e4f3657413ad9409ebc70d8745f69b32322d622"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\_ViewImports.cshtml"
using STI_Prokorat_Krausner_Broz;

#line default
#line hidden
#line 2 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\_ViewImports.cshtml"
using STI_Prokorat_Krausner_Broz.Models;

#line default
#line hidden
#line 2 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
using System.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9e4f3657413ad9409ebc70d8745f69b32322d622", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c4e6b529a7d93b3cba08e4ac68d320e2c92f45dc", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<STIProkoratKrausnerBroz.Models.ToolsClass>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
  
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewData["Title"] = "Kraušner, Prokorát, Brož";

#line default
#line hidden
            BeginContext(171, 10889, true);
            WriteLiteral(@"<section class=""timeChoiceSection"">
	<div class=""checkBoxDiv"">
		<label class=""container"" id=""weekLabel"">
			Týden
			<input type=""radio"" name=""radio"" id=""weekRadio"" onclick=""hideDiv('monthCanvas', 'weekCanvas')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"" id=""monthLabel"">
			Měsíc
			<input type=""radio"" name=""radio"" id=""monthRadio"" checked=""checked"" onclick=""hideDiv('weekCanvas', 'monthCanvas')"">
			<span class=""checkmark""></span>
		</label>
	</div>
</section>
<section class=""content"">
	<div class=""checkBoxDiv2"">
		<h1>Vyber měnu:</h1>
		<label class=""container"">
			Americký dolar
			<input type=""checkbox"" checked=""checked"" onclick=""displayGraphRow('usdRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Australský dolar
			<input type=""checkbox"" onclick=""displayGraphRow('audRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Britská libra
			<input type=""checkbox"" checked=""checked"" onc");
            WriteLiteral(@"lick=""displayGraphRow('gbpRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Chorvatská kuna
			<input type=""checkbox"" onclick=""displayGraphRow('hrkRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Dánská koruna
			<input type=""checkbox"" onclick=""displayGraphRow('dkkRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Euro
			<input type=""checkbox"" checked=""checked"" onclick=""displayGraphRow('eurRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Japonský jen
			<input type=""checkbox"" onclick=""displayGraphRow('jpyRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Kanadský dolar
			<input type=""checkbox"" onclick=""displayGraphRow('cadRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Maďarský forint
			<input type=""checkbox"" onclick=""displayGraphRow('hufRow')"">
			<span class=""checkm");
            WriteLiteral(@"ark""></span>
		</label>
		<label class=""container"">
			Norská koruna
			<input type=""checkbox"" onclick=""displayGraphRow('nokRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Polský zlotý
			<input type=""checkbox"" onclick=""displayGraphRow('plnRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Rumunský nový lei
			<input type=""checkbox"" onclick=""displayGraphRow('ronRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Ruský rubl
			<input type=""checkbox"" onclick=""displayGraphRow('rubRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Švédská koruna
			<input type=""checkbox"" onclick=""displayGraphRow('sekRow')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Švýcarský frank
			<input type=""checkbox"" onclick=""displayGraphRow('chfRow')"">
			<span class=""checkmark""></span>
		</label>
	</div>
	<div class=""graphDiv"">
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""usdRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""usd-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""usd-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""usd-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""usd-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""audRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""aud-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""aud-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""aud-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""aud-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""gbpRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""gbp-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""gbp-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""gbp-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""gbp-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""hrkRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""hrk-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""hrk-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""hrk-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""hrk-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""dkkRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""dkk-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""dkk-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""dkk-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""dkk-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""eurRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""eur-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""eur-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""eur-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""eur-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""jpyRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""jpy-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""jpy-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""jpy-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""jpy-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""cadRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""cad-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""cad-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""cad-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""cad-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""hufRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""huf-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""huf-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""huf-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""huf-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""nokRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""nok-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""nok-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""nok-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""nok-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""plnRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""pln-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""pln-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""pln-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""pln-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""ronRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""ron-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""ron-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""ron-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""ron-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""rubRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""rub-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""rub-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""rub-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""rub-month-sale-canvas""></canvas>
			</div>
		</div>
		<div class=""rowCanvasDiv"" id=""sekRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""sek-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""sek-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""sek-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""sek-month-sale-canvas""></canvas>
			</div>
		</div>
		<div ");
            WriteLiteral(@"class=""rowCanvasDiv"" id=""chfRow"">
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""chf-week-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""weekCanvas"" id=""chf-week-sale-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""chf-month-purchase-canvas""></canvas>
			</div>
			<div class=""graphCanvasDiv"">
				<canvas class=""monthCanvas"" id=""chf-month-sale-canvas""></canvas>
			</div>
		</div>
	</div>
</section>
<script type=""text/javascript"">
    let bankNames = [];
	var dates = [], weekDates = [], monthDates = [], m = 0, n = 0;
");
            EndContext();
#line 316 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
      
        foreach (var d in Model.Currencies[0].Dates){

#line default
#line hidden
            BeginContext(11123, 12, true);
            WriteLiteral("            ");
            EndContext();
            BeginContext(11137, 21, true);
            WriteLiteral("dates.push(new Date(\"");
            EndContext();
            BeginContext(11159, 29, false);
#line 318 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                              Write(d.date.ToString("yyyy-MM-dd"));

#line default
#line hidden
            EndContext();
            BeginContext(11188, 6, true);
            WriteLiteral("\"));\r\n");
            EndContext();
#line 319 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(11205, 2, true);
            WriteLiteral("\t\t");
            EndContext();
            BeginContext(11209, 46, true);
            WriteLiteral("for (var i = 0; i < dates.length; i++)  {\r\n\t\t\t");
            EndContext();
            BeginContext(11257, 16, true);
            WriteLiteral("if(m < 7){\r\n\t\t\t\t");
            EndContext();
            BeginContext(11275, 31, true);
            WriteLiteral("weekDates.push(dates[i]);\r\n\t\t\t\t");
            EndContext();
            BeginContext(11308, 9, true);
            WriteLiteral("m++;\r\n\t\t\t");
            EndContext();
            BeginContext(11319, 6, true);
            WriteLiteral("}\r\n\t\t\t");
            EndContext();
            BeginContext(11327, 17, true);
            WriteLiteral("if(n < 30){\r\n\t\t\t\t");
            EndContext();
            BeginContext(11346, 32, true);
            WriteLiteral("monthDates.push(dates[i]);\r\n\t\t\t\t");
            EndContext();
            BeginContext(11380, 9, true);
            WriteLiteral("n++;\r\n\t\t\t");
            EndContext();
            BeginContext(11391, 5, true);
            WriteLiteral("}\r\n\t\t");
            EndContext();
            BeginContext(11398, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 330 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
        foreach (var curr in Model.Currencies)
		{

#line default
#line hidden
            BeginContext(11454, 12, true);
            WriteLiteral("            ");
            EndContext();
            BeginContext(11468, 154, true);
            WriteLiteral("var weekSales = [], monthSales = [], weekPurchases = [], monthPurchases = [], weekIndexes = [0, 0, 0, 0, 0], monthIndexes = [0, 0, 0, 0, 0];\r\n            ");
            EndContext();
            BeginContext(11624, 33, true);
            WriteLiteral("for(var i = 0; i < 5; i++){\r\n\t\t\t\t");
            EndContext();
            BeginContext(11659, 25, true);
            WriteLiteral("weekSales.push([]);\r\n\t\t\t\t");
            EndContext();
            BeginContext(11686, 26, true);
            WriteLiteral("monthSales.push([]);\r\n\t\t\t\t");
            EndContext();
            BeginContext(11714, 29, true);
            WriteLiteral("weekPurchases.push([]);\r\n\t\t\t\t");
            EndContext();
            BeginContext(11745, 37, true);
            WriteLiteral("monthPurchases.push([]);\r\n           ");
            EndContext();
            BeginContext(11784, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 339 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
			for (var i = 0; i <curr.Dates.Count;i++)
			{
				foreach (var bank in curr.Dates[i].Banks)
				{

#line default
#line hidden
            BeginContext(11892, 20, true);
            WriteLiteral("                    ");
            EndContext();
            BeginContext(11914, 51, true);
            WriteLiteral("if(bankNames.length < 5){\r\n                        ");
            EndContext();
            BeginContext(11967, 16, true);
            WriteLiteral("bankNames.push(\"");
            EndContext();
            BeginContext(11984, 9, false);
#line 344 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                     Write(bank.name);

#line default
#line hidden
            EndContext();
            BeginContext(11993, 25, true);
            WriteLiteral("\");\r\n                    ");
            EndContext();
            BeginContext(12020, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 346 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                    if (bank.name == "kb")
					{

#line default
#line hidden
            BeginContext(12075, 6, true);
            WriteLiteral("\t\t\t\t\t\t");
            EndContext();
            BeginContext(12083, 39, true);
            WriteLiteral("if (weekSales[0].length < 8) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12124, 43, true);
            WriteLiteral("weekSales[0][weekIndexes[0]] = parseFloat(\"");
            EndContext();
            BeginContext(12168, 41, false);
#line 349 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                    Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(12209, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12223, 47, true);
            WriteLiteral("weekPurchases[0][weekIndexes[0]] = parseFloat(\"");
            EndContext();
            BeginContext(12271, 45, false);
#line 350 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                        Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(12316, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12330, 25, true);
            WriteLiteral("weekIndexes[0]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(12357, 9, true);
            WriteLiteral("}\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(12368, 41, true);
            WriteLiteral("if (monthSales[0].length < 31) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12411, 45, true);
            WriteLiteral("monthSales[0][monthIndexes[0]] = parseFloat(\"");
            EndContext();
            BeginContext(12457, 41, false);
#line 354 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                      Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(12498, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12512, 49, true);
            WriteLiteral("monthPurchases[0][monthIndexes[0]] = parseFloat(\"");
            EndContext();
            BeginContext(12562, 45, false);
#line 355 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                          Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(12607, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12621, 26, true);
            WriteLiteral("monthIndexes[0]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(12649, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 358 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                    }
					if (bank.name == "rb")
					{

#line default
#line hidden
            BeginContext(12712, 6, true);
            WriteLiteral("\t\t\t\t\t\t");
            EndContext();
            BeginContext(12720, 39, true);
            WriteLiteral("if (weekSales[1].length < 8) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12761, 43, true);
            WriteLiteral("weekSales[1][weekIndexes[1]] = parseFloat(\"");
            EndContext();
            BeginContext(12805, 41, false);
#line 362 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                    Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(12846, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12860, 47, true);
            WriteLiteral("weekPurchases[1][weekIndexes[1]] = parseFloat(\"");
            EndContext();
            BeginContext(12908, 45, false);
#line 363 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                        Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(12953, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(12967, 25, true);
            WriteLiteral("weekIndexes[1]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(12994, 9, true);
            WriteLiteral("}\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(13005, 41, true);
            WriteLiteral("if (monthSales[1].length < 31) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13048, 45, true);
            WriteLiteral("monthSales[1][monthIndexes[1]] = parseFloat(\"");
            EndContext();
            BeginContext(13094, 41, false);
#line 367 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                      Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(13135, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13149, 49, true);
            WriteLiteral("monthPurchases[1][monthIndexes[1]] = parseFloat(\"");
            EndContext();
            BeginContext(13199, 45, false);
#line 368 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                          Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(13244, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13258, 26, true);
            WriteLiteral("monthIndexes[1]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(13286, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 371 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                    }
					if (bank.name == "cs")
					{

#line default
#line hidden
            BeginContext(13349, 6, true);
            WriteLiteral("\t\t\t\t\t\t");
            EndContext();
            BeginContext(13357, 39, true);
            WriteLiteral("if (weekSales[2].length < 8) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13398, 43, true);
            WriteLiteral("weekSales[2][weekIndexes[2]] = parseFloat(\"");
            EndContext();
            BeginContext(13442, 41, false);
#line 375 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                    Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(13483, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13497, 47, true);
            WriteLiteral("weekPurchases[2][weekIndexes[2]] = parseFloat(\"");
            EndContext();
            BeginContext(13545, 45, false);
#line 376 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                        Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(13590, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13604, 25, true);
            WriteLiteral("weekIndexes[2]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(13631, 9, true);
            WriteLiteral("}\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(13642, 41, true);
            WriteLiteral("if (monthSales[2].length < 31) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13685, 45, true);
            WriteLiteral("monthSales[2][monthIndexes[2]] = parseFloat(\"");
            EndContext();
            BeginContext(13731, 41, false);
#line 380 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                      Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(13772, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13786, 49, true);
            WriteLiteral("monthPurchases[2][monthIndexes[2]] = parseFloat(\"");
            EndContext();
            BeginContext(13836, 45, false);
#line 381 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                          Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(13881, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(13895, 26, true);
            WriteLiteral("monthIndexes[2]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(13923, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 384 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                    }
					if (bank.name == "cnb")
					{

#line default
#line hidden
            BeginContext(13987, 6, true);
            WriteLiteral("\t\t\t\t\t\t");
            EndContext();
            BeginContext(13995, 39, true);
            WriteLiteral("if (weekSales[3].length < 8) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14036, 43, true);
            WriteLiteral("weekSales[3][weekIndexes[3]] = parseFloat(\"");
            EndContext();
            BeginContext(14080, 41, false);
#line 388 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                    Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(14121, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14135, 47, true);
            WriteLiteral("weekPurchases[3][weekIndexes[3]] = parseFloat(\"");
            EndContext();
            BeginContext(14183, 45, false);
#line 389 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                        Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(14228, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14242, 25, true);
            WriteLiteral("weekIndexes[3]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(14269, 9, true);
            WriteLiteral("}\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(14280, 41, true);
            WriteLiteral("if (monthSales[3].length < 31) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14323, 45, true);
            WriteLiteral("monthSales[3][monthIndexes[3]] = parseFloat(\"");
            EndContext();
            BeginContext(14369, 41, false);
#line 393 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                      Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(14410, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14424, 49, true);
            WriteLiteral("monthPurchases[3][monthIndexes[3]] = parseFloat(\"");
            EndContext();
            BeginContext(14474, 45, false);
#line 394 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                          Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(14519, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14533, 26, true);
            WriteLiteral("monthIndexes[3]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(14561, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 397 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                    }
					if (bank.name == "csob")
					{

#line default
#line hidden
            BeginContext(14626, 6, true);
            WriteLiteral("\t\t\t\t\t\t");
            EndContext();
            BeginContext(14634, 39, true);
            WriteLiteral("if (weekSales[4].length < 8) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14675, 43, true);
            WriteLiteral("weekSales[4][weekIndexes[4]] = parseFloat(\"");
            EndContext();
            BeginContext(14719, 41, false);
#line 401 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                    Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(14760, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14774, 47, true);
            WriteLiteral("weekPurchases[4][weekIndexes[4]] = parseFloat(\"");
            EndContext();
            BeginContext(14822, 45, false);
#line 402 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                        Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(14867, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14881, 25, true);
            WriteLiteral("weekIndexes[4]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(14908, 9, true);
            WriteLiteral("}\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(14919, 41, true);
            WriteLiteral("if (monthSales[4].length < 31) {\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(14962, 45, true);
            WriteLiteral("monthSales[4][monthIndexes[4]] = parseFloat(\"");
            EndContext();
            BeginContext(15008, 41, false);
#line 406 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                      Write(bank.saleVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(15049, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(15063, 49, true);
            WriteLiteral("monthPurchases[4][monthIndexes[4]] = parseFloat(\"");
            EndContext();
            BeginContext(15113, 45, false);
#line 407 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                          Write(bank.purchaseVal.ToString().Replace(",", "."));

#line default
#line hidden
            EndContext();
            BeginContext(15158, 12, true);
            WriteLiteral("\");\r\n\t\t\t\t\t\t\t");
            EndContext();
            BeginContext(15172, 26, true);
            WriteLiteral("monthIndexes[4]++;\r\n\t\t\t\t\t\t");
            EndContext();
            BeginContext(15200, 3, true);
            WriteLiteral("}\r\n");
            EndContext();
#line 410 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                    }

				}

			}

#line default
#line hidden
            BeginContext(15243, 3, true);
            WriteLiteral("\t\t\t");
            EndContext();
            BeginContext(15248, 25, true);
            WriteLiteral("createCurrencySaleGraph(\"");
            EndContext();
            BeginContext(15274, 19, false);
#line 415 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                  Write(curr.Name.ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(15293, 24, true);
            WriteLiteral("\"+\"-week-sale-canvas\", \"");
            EndContext();
            BeginContext(15318, 9, false);
#line 415 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                              Write(curr.Name);

#line default
#line hidden
            EndContext();
            BeginContext(15327, 41, true);
            WriteLiteral("\", bankNames, weekDates, weekSales);\r\n\t\t\t");
            EndContext();
            BeginContext(15370, 29, true);
            WriteLiteral("createCurrencyPurchaseGraph(\"");
            EndContext();
            BeginContext(15400, 19, false);
#line 416 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                      Write(curr.Name.ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(15419, 28, true);
            WriteLiteral("\"+\"-week-purchase-canvas\", \"");
            EndContext();
            BeginContext(15448, 9, false);
#line 416 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                                      Write(curr.Name);

#line default
#line hidden
            EndContext();
            BeginContext(15457, 45, true);
            WriteLiteral("\", bankNames, weekDates, weekPurchases);\r\n\t\t\t");
            EndContext();
            BeginContext(15504, 25, true);
            WriteLiteral("createCurrencySaleGraph(\"");
            EndContext();
            BeginContext(15530, 19, false);
#line 417 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                  Write(curr.Name.ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(15549, 25, true);
            WriteLiteral("\"+\"-month-sale-canvas\", \"");
            EndContext();
            BeginContext(15575, 9, false);
#line 417 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                               Write(curr.Name);

#line default
#line hidden
            EndContext();
            BeginContext(15584, 43, true);
            WriteLiteral("\", bankNames, monthDates, monthSales);\r\n\t\t\t");
            EndContext();
            BeginContext(15629, 29, true);
            WriteLiteral("createCurrencyPurchaseGraph(\"");
            EndContext();
            BeginContext(15659, 19, false);
#line 418 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                      Write(curr.Name.ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(15678, 29, true);
            WriteLiteral("\"+\"-month-purchase-canvas\", \"");
            EndContext();
            BeginContext(15708, 9, false);
#line 418 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
                                                                                       Write(curr.Name);

#line default
#line hidden
            EndContext();
            BeginContext(15717, 44, true);
            WriteLiteral("\", bankNames, monthDates, monthPurchases);\r\n");
            EndContext();
#line 419 "C:\Users\proko\Documents\Gitlab tul\STI-SledovaniKurzu\STI-Prokorat-Krausner-Broz\Views\Home\Index.cshtml"
		}
	

#line default
#line hidden
            BeginContext(15770, 154, true);
            WriteLiteral("\thideGraphs();\r\n\thideDiv(\'weekCanvas\', \'monthCanvas\');\r\n\tdisplayGraphRow(\'gbpRow\');\r\n\tdisplayGraphRow(\'usdRow\');\r\n\tdisplayGraphRow(\'eurRow\');\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<STIProkoratKrausnerBroz.Models.ToolsClass> Html { get; private set; }
    }
}
#pragma warning restore 1591
