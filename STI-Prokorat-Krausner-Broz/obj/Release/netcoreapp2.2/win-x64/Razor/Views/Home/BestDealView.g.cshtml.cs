#pragma checksum "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4bdf4562a689e2be10f8cdb077ba6870264ad926"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_BestDealView), @"mvc.1.0.view", @"/Views/Home/BestDealView.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/BestDealView.cshtml", typeof(AspNetCore.Views_Home_BestDealView))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\_ViewImports.cshtml"
using STI_Prokorat_Krausner_Broz;

#line default
#line hidden
#line 2 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\_ViewImports.cshtml"
using STI_Prokorat_Krausner_Broz.Models;

#line default
#line hidden
#line 2 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
using STIProkoratKrausnerBroz.Models;

#line default
#line hidden
#line 3 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
using System.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4bdf4562a689e2be10f8cdb077ba6870264ad926", @"/Views/Home/BestDealView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"080e8c16754dd410d86b0910d4a98d6a0ab200ce", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_BestDealView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<STIProkoratKrausnerBroz.Models.ToolsClass>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
  
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewData["Title"] = "Kraušner, Prokorát, Brož";

#line default
#line hidden
            BeginContext(203, 2452, true);
            WriteLiteral(@"<section class=""content"">
	<div class=""checkboxDiv2"" id=""bankRowDiv"">
		<h1>Vyber měnu:</h1>
		<label class=""container"">
			Americký dolar
			<input type=""checkbox"" id=""usd"" onclick=""displayRow('USD')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Australský dolar
			<input type=""checkbox"" id=""aud"" onclick=""displayRow('AUD')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Britská libra
			<input type=""checkbox"" id=""gbp"" onclick=""displayRow('GBP')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Chorvatská kuna
			<input type=""checkbox"" id=""hrk"" onclick=""displayRow('HRK')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Dánská koruna
			<input type=""checkbox"" id=""dkk"" onclick=""displayRow('DKK')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Euro
			<input type=""checkbox"" id=""eur"" onclick=""displayRow('EUR')"">
			<span class=""checkmark""></span>
		</label>
		<l");
            WriteLiteral(@"abel class=""container"">
			Japonský jen
			<input type=""checkbox"" id=""jpy"" onclick=""displayRow('JPY')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Kanadský dolar
			<input type=""checkbox"" id=""cad"" onclick=""displayRow('CAD')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Maďarský forint
			<input type=""checkbox"" id=""huf"" onclick=""displayRow('HUF')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Norská koruna
			<input type=""checkbox"" id=""nok"" onclick=""displayRow('NOK')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Polský zlotý
			<input type=""checkbox"" id=""pln"" onclick=""displayRow('PLN')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Rumunský nový lei
			<input type=""checkbox"" id=""ron"" onclick=""displayRow('RON')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Ruský rubl
			<input type=""checkbox"" id=""rub"" onclick=""display");
            WriteLiteral(@"Row('RUB')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Švédská koruna
			<input type=""checkbox"" id=""sek"" onclick=""displayRow('SEK')"">
			<span class=""checkmark""></span>
		</label>
		<label class=""container"">
			Švýcarský frank
			<input type=""checkbox"" id=""chf"" onclick=""displayRow('CHF')"">
			<span class=""checkmark""></span>
		</label>
	</div>
	<div class=""tableDiv"">
");
            EndContext();
#line 88 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
          
			var deals = (List<Deal>)ViewData["deals"];
		

#line default
#line hidden
            BeginContext(2710, 252, true);
            WriteLiteral("\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Země</th>\n\t\t\t\t\t<th>Označení</th>\n\t\t\t\t\t<th>Nejvýhodnější prodej</th>\n\t\t\t\t\t<th>Jméno banky</th>\n\t\t\t\t\t<th>Nejvýhodnější nákup</th>\n\t\t\t\t\t<th>Jméno banky</th>\n\t\t\t\t\t<th>Doporučení</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n");
            EndContext();
#line 105 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                 foreach (var item in deals)
				{

#line default
#line hidden
            BeginContext(3001, 8, true);
            WriteLiteral("\t\t\t\t\t<tr");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 3009, "\"", 3032, 1);
#line 107 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
WriteAttributeValue("", 3014, item.CurrencyName, 3014, 18, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3033, 49, true);
            WriteLiteral(" class=\"dealRow\" style=\"display:none\">\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3083, 12, false);
#line 108 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.Country);

#line default
#line hidden
            EndContext();
            BeginContext(3095, 16, true);
            WriteLiteral("</td>\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3112, 17, false);
#line 109 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.CurrencyName);

#line default
#line hidden
            EndContext();
            BeginContext(3129, 16, true);
            WriteLiteral("</td>\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3146, 13, false);
#line 110 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.BestSale);

#line default
#line hidden
            EndContext();
            BeginContext(3159, 16, true);
            WriteLiteral("</td>\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3176, 27, false);
#line 111 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.BestSaleBank.ToUpper());

#line default
#line hidden
            EndContext();
            BeginContext(3203, 16, true);
            WriteLiteral("</td>\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3220, 12, false);
#line 112 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.BestBuy);

#line default
#line hidden
            EndContext();
            BeginContext(3232, 16, true);
            WriteLiteral("</td>\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3249, 26, false);
#line 113 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.BestBuyBank.ToUpper());

#line default
#line hidden
            EndContext();
            BeginContext(3275, 16, true);
            WriteLiteral("</td>\n\t\t\t\t\t\t<td>");
            EndContext();
            BeginContext(3292, 19, false);
#line 114 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
                       Write(item.Recommendation);

#line default
#line hidden
            EndContext();
            BeginContext(3311, 17, true);
            WriteLiteral("</td>\n\t\t\t\t\t</tr>\n");
            EndContext();
#line 116 "C:\Users\KraukyMan\Desktop\STI\New\STI-Prokorat-Krausner-Broz\Views\Home\BestDealView.cshtml"
				}

#line default
#line hidden
            BeginContext(3334, 823, true);
            WriteLiteral(@"			</tbody>
		</table>
	</div>
</section>

<script type=""text/javascript"">
    var bankCheckboxValues = JSON.parse(localStorage.getItem('bankCheckboxValues')) || {};
    var $bankCheckboxes = $(""#bankRowDiv :checkbox"");
    $bankCheckboxes.on(""change"", function () {
        $bankCheckboxes.each(function () {
            bankCheckboxValues[this.id] = this.checked;
        });
        localStorage.setItem(""bankCheckboxValues"", JSON.stringify(bankCheckboxValues));
    });

    $.each(bankCheckboxValues, function (key, value) {
        $(""#"" + key).prop('checked', value);
    });

    var bankBoxes = $(""#bankRowDiv :checkbox"");
    for (var i = 0; i < bankBoxes.length; i++) {
        if (bankBoxes[i].checked == true) {
            displayRow(bankBoxes[i].id.toUpperCase());
        }
    }</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<STIProkoratKrausnerBroz.Models.ToolsClass> Html { get; private set; }
    }
}
#pragma warning restore 1591
